import Foundation
import BrightFutures
import Alamofire
import SwiftyJSON

public class <%= model_name %> : JsonModel {
  <%= for param <- params %>
    <%= param %>
  <%= end %>
    public required init(json: JSON) {
        <%= for parser <- parsers %>
          <%= parser %>
        <%= end %>
    }
}

public class <%= model_name %>Repository : Repository {
    
    public func register() -> Future<Bool, NSError> {
        return requestSuccess(.POST, routes: "/v1/users/new", param: nil)
    }
    
    public func favorite(userId: Int, songId: Int) -> Future<Bool, NSError> {
        let param = ["userId": userId, "songId": songId]
        return requestSuccess(.POST, routes: "/v1/users/favorites/add", param: param)
    }
    
    public func playlists(userId: Int) -> Future<[Playlist], NSError> {
        let param: [String: AnyObject]? = ["userId": userId]
        return requestArray(.POST, routes: "/v1/users/playlists/add", param: param)
    }
    
    public func createPlaylist(userId: Int, name: String) -> Future<Bool, NSError> {
        let param: [String: AnyObject] = ["userId": userId, "name": name]
        return requestSuccess(.POST, routes: "/v1/users/playlists/add", param: param)
    }
    
    public func deletePlaylist(playlistId: Int) -> Future<Bool, NSError> {
        let param: [String: AnyObject] = ["playlistId": playlistId]
        return requestSuccess(.DELETE, routes: "/v1/users/playlists/delete", param: param)
    }
    
}
